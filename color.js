//Variables which store data for use within the application.
var colors = [];
var pickedColor;
var numOf = 6;
//Declaration of variables for HTML elements
var colorBtn = document.querySelectorAll(".square");
var titleRGB = document.querySelector("#colorCode");
var header = document.querySelector("#header");
var selectionDisplay = document.querySelector("#message");
var playAgain = document.querySelector("button");
var newBtn = document.querySelector("#new");
var modeButtons = document.querySelectorAll(".mode");
var playBtn = document.querySelector("#play");

init();

function init(){
	setupModeBtns();
	setupSquares();
	reset();
}

function setupModeBtns(){
	for(var x = 0; x < modeButtons.length; x++){
		modeButtons[x].addEventListener("click", function() {
			modeButtons[0].classList.remove("selected");
			modeButtons[1].classList.remove("selected");
			this.classList.add("selected");

			this.textContent === "Easy" ? numOf = 3: numOf = 6;
			reset();
		});
	}
}

function setupSquares(){
	for(var i=0; i<colorBtn.length; i++){
		//Click Listeners
		colorBtn[i].addEventListener("click", function() {
			var clickedColor = this.style.backgroundColor;

			if(clickedColor == pickedColor){
				for(var x = 0; x<numOf; x++){
					colorBtn[x].classList.remove("hide");
					changeColors(clickedColor);
				}
				selectionDisplay.textContent = "Correct!";
				header.style.backgroundColor = pickedColor;
				newBtn.textContent = "Play Again?";
			} else{
				this.classList.add("hide");
				selectionDisplay.textContent = "Try Again";
			}
		});
	}
}

function reset(){
	colors = generateColors(numOf);
	pickedColor = pickColor();
	titleRGB.textContent = pickedColor;
	header.style.backgroundColor = "#cc504a";
	selectionDisplay.textContent = "";
	newBtn.textContent = "New Colours";
	
	//The for loop runs through the Colour Buttons to then remove the hide class,
	//as to show the squares once again. The buttons are then given their new 
	//colours that are stored within the colors array.
	for(var i=0; i < colorBtn.length; i++){
		if(colors[i]){
			colorBtn[i].classList.remove("hide");
			colorBtn[i].style.backgroundColor = colors[i];
		} else {
			colorBtn[i].classList.add("hide");
		}
	}
}

playBtn.addEventListener("click", function(){
	var wrapper = document.querySelector("#wrapper");

	wrapper.style.display = "none";
})


//New Colours listener which checks the #new button to see if has been clicked.
//If the button is clicked the function is then run. The function calls upon
//the generateColors function to create X amount of new colours (currently set to
//6 for default till later). The function pickColor is then called again to pick
//from the new array of colours. HTML elements are then updated according to the
//newly picked colour or are set back to default as it is a new game.
newBtn.addEventListener("click", function(){
	reset();
});

//changeColors takes in the parameter of color (rgb()). The array is then looped through
//with a for loop till the incrementing variable is !< the length of the array.
//For each loop, an instance in the array colorBtn is taken and is assigned the 
//color that was passed into the function. The color passed in is the selected color.
function changeColors(color){
	for(var i = 0; i < colors.length; i++){
		colorBtn[i].style.backgroundColor = color;
	}
}


//pickColor function is used to select a number between the number of buttons on
//screen. The function creates a variable which is assigned a number based on
//Math.random multiplied by the length of the colorBtn array. The number
//generated is rounded down with math.floor to ensure it is a whole number.
//a value is then returned to the variable which called it in the colors array
function pickColor(){
	var random = Math.floor(Math.random()* numOf);
	return colors[random];
}


//The generateColors function is used to create colours and to store them within
//to the colors array for use later. The function takes a parameter of num, which
//is used to indicate the number of colours that need to be generated for use.
//A for loop is run until the run variable is equal to the number given to the
//function. For each loop, a push to the color array is done, where is calls
//the randomColor function, which returns a string for rgb() which is then pushed.
//The function then returns the variable colorsArray for use within the variable
//colors array.
function generateColors(num) {
	var colorsArray = [];
	for (var x=0; x < num; x++){
		colorsArray.push(randomColor());
	}

	return colorsArray;
}

//THe randomColor function randomly generates 3 numbers to act as the values
//of red, green, and blue. The values are generated by Math.random, so they
//are multiplied by 255 to make sure the full scope of colours can be generated/
//The numbers are rounded down with Math.floor to ensure numbers are whole numbers.
//Once the numbers have been generated, they are returned as a string with the
//values inputted into them using concatenation.
function randomColor(){
	//Picking random colours using math.random and rounding down
	var r = Math.floor(Math.random() * 255);
	var g = Math.floor(Math.random() * 255);
	var b = Math.floor(Math.random() * 255);

	return "rgb(" + r + ", " + g + ", " + b + ")";
}